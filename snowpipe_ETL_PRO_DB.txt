warehouse="PRO_CURATION"
database="PRO_DB",
schema="PRO_SCHEMA",
role="PRO_DEVELOPER_ROLE",

CREATE DATABASE PRO_DB;

USE PRO_DB

CREATE SCHEMA PRO_SCHEMA;

CREATE WAREHOUSE PRO_CURATION WITH WAREHOUSE_SIZE = 'XSMALL' WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 600 AUTO_RESUME = TRUE;


DROP TABLE IF EXISTS CUSTOMER_RAW;
CREATE TABLE CUSTOMER_RAW (C_CUSTKEY NUMBER(38,0),
                           C_NAME VARCHAR(25),
                           C_ADDRESS VARCHAR(40),
                           C_NATIONKEY NUMBER(38,0),
                           C_PHONE VARCHAR(15),
                           C_ACCTBAL NUMBER(12,2),
                           C_MKTSEGMENT VARCHAR(10),
                           C_COMMENT VARCHAR(117),
                           BATCH_ID DOUBLE
                           );

DROP TABLE IF EXISTS ORDERS_RAW;
CREATE TABLE ORDERS_RAW (O_ORDERKEY NUMBER(38,0),
                         O_CUSTKEY NUMBER(38,0),
                         O_ORDERSTATUS VARCHAR(1),
                         O_TOTALPRICE NUMBER(12,2),
                         O_ORDERDATE DATE,
                         O_ORDERPRIORITY VARCHAR(15),
                         O_CLERK VARCHAR(15),
                         O_SHIPPRIORITY NUMBER(38,0),
                         O_COMMENT VARCHAR(79),
                         BATCH_ID DOUBLE
                         );

USE PRO_DB.PRO_SCHEMA;

SELECT * FROM ORDERS_RAW;

SELECT * FROM CUSTOMER_RAW;

CREATE OR REPLACE STORAGE INTEGRATION S3_INTEGRATION_PRO
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = S3
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::516003265142:role/Snowflake_Access_Role'
    ENABLED = TRUE
    STORAGE_ALLOWED_LOCATIONS = ('s3://snowflakedatapipelinepro-123/firehose/');

DESC INTEGRATION S3_INTEGRATION_PRO

CREATE OR REPLACE STAGE CUSTOMER_RAW_STAGE
    URL = 's3://snowflakedatapipelinepro-123/firehose/customers/'
    STORAGE_INTEGRATION = S3_INTEGRATION_PRO
    FILE_FORMAT=CSV_FORMAT;
    
CREATE OR REPLACE STAGE ORDERS_RAW_STAGE
    URL = 's3://snowflakedatapipelinepro-123/firehose/orders/'
    STORAGE_INTEGRATION = S3_INTEGRATION_PRO
    FILE_FORMAT=CSV_FORMAT;

COPY INTO PRO_DB.PRO_SCHEMA.CUSTOMER_RAW
(C_CUSTKEY, C_NAME, C_ADDRESS, C_NATIONKEY, C_PHONE, C_ACCTBAL, C_MKTSEGMENT, C_COMMENT, BATCH_ID) 
FROM (SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7, t.$8, '20220826160201' FROM @CUSTOMER_RAW_STAGE t);


COPY INTO PRO_DB.PRO_SCHEMA.ORDERS_RAW
(O_ORDERKEY , O_CUSTKEY, O_ORDERSTATUS, O_TOTALPRICE, O_ORDERDATE, O_ORDERPRIORITY, O_CLERK, O_SHIPPRIORITY, O_COMMENT, BATCH_ID)
FROM (SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7, t.$8, t.$9, '20220826160201' FROM @ORDERS_RAW_STAGE t);

SHOW PIPES;


DROP TABLE IF EXISTS ORDER_CUSTOMER_DATE_PRICE;
CREATE TABLE ORDER_CUSTOMER_DATE_PRICE (CUSTOMER_NAME        VARCHAR(25),
                                       ORDER_DATE           DATE, 
                                       ORDER_TOTAL_PRICE    NUMBER(12,2),
                                       BATCH_ID             DOUBLE
                                      );
                         
                 


USE ROLE ACCOUNTADMIN;

GRANT OWNERSHIP ON DATABASE PRO_DB TO ROLE PRO_DEVELOPER_ROLE COPY CURRENT GRANTS;

GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE PRO_DB TO ROLE PRO_DEVELOPER_ROLE COPY CURRENT GRANTS; 

GRANT OWNERSHIP ON ALL TABLES IN DATABASE PRO_DB TO ROLE PRO_DEVELOPER_ROLE COPY CURRENT GRANTS; 

GRANT OWNERSHIP ON ALL VIEWS IN DATABASE PRO_DB TO ROLE PRO_DEVELOPER_ROLE COPY CURRENT GRANTS;

GRANT USAGE ON INTEGRATION S3_INTEGRATION_PRO TO ROLE PRO_DEVELOPER_ROLE;

GRANT ALL PRIVILEGES ON FILE FORMAT PRO_DB.PRO_SCHEMA.CSV_FORMAT TO PRO_DEVELOPER_ROLE;

grant ownership on stage CUSTOMER_RAW_STAGE to role PRO_DEVELOPER_ROLE revoke current grants;

grant ownership on stage ORDERS_RAW_STAGE to role PRO_DEVELOPER_ROLE revoke current grants;

USE ROLE PRO_DEVELOPER_ROLE



SELECT * FROM ORDER_CUSTOMER_DATE_PRICE;

SELECT * FROM ORDERS_RAW;

SELECT * FROM CUSTOMER_RAW;
